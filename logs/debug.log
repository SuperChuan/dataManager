2018-04-13 23:21:03  [ main:0 ] - [ DEBUG ]  this is debug message!
2018-04-13 23:21:03  [ main:3 ] - [ INFO ]  this is information!
2018-04-13 23:21:03  [ main:3 ] - [ ERROR ]  this is error message!
2018-04-14 09:09:50  [ main:0 ] - [ DEBUG ]  this is debug message!
2018-04-14 09:09:50  [ main:3 ] - [ INFO ]  this is information!
2018-04-14 09:09:50  [ main:3 ] - [ ERROR ]  this is error message!
2018-04-14 09:09:50  [ main:6 ] - [ INFO ]  成败型打分方法被调用！
2018-04-14 09:17:37  [ main:0 ] - [ DEBUG ]  this is debug message!
2018-04-14 09:17:37  [ main:0 ] - [ INFO ]  this is information!
2018-04-14 09:17:37  [ main:0 ] - [ ERROR ]  this is error message!
2018-04-14 09:18:22  [ main:0 ] - [ DEBUG ]  this is debug message!
2018-04-14 09:18:22  [ main:2 ] - [ INFO ]  this is information!
2018-04-14 09:18:22  [ main:2 ] - [ ERROR ]  this is error message!
2018-04-14 20:38:55  [ main:0 ] - [ INFO ]  创建一个PCA对象
2018-04-14 20:38:55  [ main:59 ] - [ INFO ]  开始PCA计算
2018-04-14 20:38:55  [ main:61 ] - [ INFO ]  PCA：计算关系矩阵
2018-04-14 21:43:45  [ main:0 ] - [ INFO ]  创建一个PCA对象
2018-04-14 21:43:45  [ main:3 ] - [ INFO ]  开始PCA计算
2018-04-14 21:43:45  [ main:4 ] - [ INFO ]  PCA：计算关系矩阵
2018-04-14 21:55:29  [ main:0 ] - [ INFO ]  创建一个AHP对象
2018-04-14 21:55:29  [ main:3 ] - [ INFO ]  开始AHP的计算
2018-04-14 22:00:20  [ main:0 ] - [ INFO ]  创建一个PCA对象
2018-04-14 22:00:20  [ main:4 ] - [ INFO ]  开始PCA计算
2018-04-14 22:00:20  [ main:5 ] - [ INFO ]  PCA：计算关系矩阵
2018-04-14 22:00:27  [ main:0 ] - [ INFO ]  创建一个AHP对象
2018-04-14 22:00:27  [ main:3 ] - [ INFO ]  开始AHP的计算
2018-04-22 10:51:47  [ main:0 ] - [ INFO ]  单因素方差分析方法被调用
2018-04-22 10:53:04  [ main:0 ] - [ INFO ]  OneWayANOVA单因素方差分析方法被调用
2018-04-22 11:00:23  [ main:0 ] - [ INFO ]  双因素方差方法被调用
[INFO ] 2018-04-22 11:07:16  [ main:0 ] - [ INFO ]  单因素方差分析方法被调用
[INFO ] 2018-04-22 11:08:40,536 method:ProductQuality.OneWayANOVA.m_OneWayANOVA(OneWayANOVA.java:133)
单因素方差分析方法被调用
[INFO ] 2018-04-22 11:09:05,461 method:ProductQuality.OneWayANOVA.m_OneWayANOVA(OneWayANOVA.java:133)单因素方差分析方法被调用
[INFO ] 2018-04-22 11:09:37,770 method:ProductQuality.OneWayANOVA.m_OneWayANOVA(OneWayANOVA.java:133) 单因素方差分析方法被调用
[INFO ] 2018-04-30 10:33:43,386 method:Weight.EntropyWeight.m_EntropyWeight(EntropyWeight.java:23) 熵权法被调用
[INFO ] 2018-04-30 10:33:43,399 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-04-30 10:33:43,400 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-04-30 10:33:43,400 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-04-30 10:33:43,401 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-04-30 10:33:43,401 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-04-30 10:33:43,401 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-04-30 10:34:24,154 method:Weight.EntropyWeight.m_EntropyWeight(EntropyWeight.java:23) 熵权法被调用
[INFO ] 2018-04-30 10:34:24,158 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-04-30 10:34:24,158 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-04-30 10:34:24,159 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-04-30 10:34:24,159 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-04-30 10:34:24,159 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-04-30 10:34:24,159 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-04-30 10:36:26,686 method:Weight.EntropyWeight.m_EntropyWeight(EntropyWeight.java:23) 熵权法被调用
[INFO ] 2018-04-30 10:36:26,690 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-04-30 10:36:26,691 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-04-30 10:36:26,691 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-04-30 10:36:26,691 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-04-30 10:36:26,691 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-04-30 10:36:26,692 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-04-30 14:37:59,814 method:Score.IntervalType.m_IntervalType(IntervalType.java:26) 默认区间型打分方法，基于高斯基函数被调用
[INFO ] 2018-04-30 14:39:56,630 method:Score.IntervalType.m_IntervalType(IntervalType.java:26) 默认区间型打分方法，基于高斯基函数被调用
[INFO ] 2018-04-30 14:41:01,748 method:Score.IntervalType.m_IntervalType(IntervalType.java:26) 默认区间型打分方法，基于高斯基函数被调用
[INFO ] 2018-04-30 14:42:14,795 method:Score.IntervalType.m_IntervalTypeWithLinarBase(IntervalType.java:43) 基于线性基函的区间型打分方法被调用
[INFO ] 2018-04-30 14:42:14,799 method:Score.IntervalType.m_IntervalTypeWithSquareBase(IntervalType.java:57) 基于二次基函的区间型打分方法被调用
[INFO ] 2018-04-30 14:42:14,800 method:Score.IntervalType.m_IntervalType(IntervalType.java:26) 默认区间型打分方法，基于高斯基函数被调用
[INFO ] 2018-04-30 14:42:56,202 method:Score.IntervalType.m_IntervalTypeWithLinarBase(IntervalType.java:43) 基于线性基函的区间型打分方法被调用
[INFO ] 2018-04-30 14:42:56,207 method:Score.IntervalType.m_IntervalTypeWithSquareBase(IntervalType.java:57) 基于二次基函的区间型打分方法被调用
[INFO ] 2018-04-30 14:42:56,210 method:Score.IntervalType.m_IntervalType(IntervalType.java:26) 默认区间型打分方法，基于高斯基函数被调用
[INFO ] 2018-04-30 15:13:46,994 method:Score.UpperLimit.m_UpperLimitWithLinearBase(UpperLimit.java:45) 基于线性基函数上限型打分方法被调用
[INFO ] 2018-04-30 15:13:46,999 method:Score.UpperLimit.m_UpperLimit(UpperLimit.java:27) 默认方法基于高斯基函数上限型打分方法被调用
[INFO ] 2018-04-30 15:13:47,007 method:Score.UpperLimit.m_UpperLimitWithSquareBase(UpperLimit.java:62) 基于线性基函数上限型打分方法被调用
[INFO ] 2018-04-30 15:25:51,135 method:Score.UpperLimit.m_UpperLimitWithLinearBase(UpperLimit.java:46) 基于线性基函数上限型打分方法被调用
[INFO ] 2018-04-30 15:25:51,140 method:Score.UpperLimit.m_UpperLimit(UpperLimit.java:28) 默认方法基于高斯基函数上限型打分方法被调用
[INFO ] 2018-04-30 15:25:51,207 method:Score.UpperLimit.m_UpperLimitWithSquareBase(UpperLimit.java:63) 基于线性基函数上限型打分方法被调用
[INFO ] 2018-04-30 15:26:35,144 method:Score.UpperLimit.m_UpperLimitWithLinearBase(UpperLimit.java:46) 基于线性基函数上限型打分方法被调用
[INFO ] 2018-04-30 15:26:35,150 method:Score.UpperLimit.m_UpperLimit(UpperLimit.java:28) 默认方法基于高斯基函数上限型打分方法被调用
[INFO ] 2018-04-30 15:26:35,218 method:Score.UpperLimit.m_UpperLimitWithSquareBase(UpperLimit.java:63) 基于二次基函数上限型打分方法被调用
[INFO ] 2018-04-30 15:34:00,971 method:Score.UpperLimit.m_UpperLimitWithLinearBase(UpperLimit.java:46) 基于线性基函数上限型打分方法被调用
[INFO ] 2018-04-30 15:34:00,977 method:Score.UpperLimit.m_UpperLimit(UpperLimit.java:28) 默认方法基于高斯基函数上限型打分方法被调用
[INFO ] 2018-04-30 15:34:01,045 method:Score.UpperLimit.m_UpperLimitWithSquareBase(UpperLimit.java:72) 基于二次基函数上限型打分方法被调用
[INFO ] 2018-04-30 15:36:05,564 method:Score.UpperLimit.m_UpperLimitWithLinearBase(UpperLimit.java:46) 基于线性基函数上限型打分方法被调用
[INFO ] 2018-04-30 15:36:05,568 method:Score.UpperLimit.m_UpperLimit(UpperLimit.java:28) 默认方法基于高斯基函数上限型打分方法被调用
[INFO ] 2018-04-30 15:36:05,635 method:Score.UpperLimit.m_UpperLimitWithSquareBase(UpperLimit.java:72) 基于二次基函数上限型打分方法被调用
[INFO ] 2018-04-30 15:41:49,910 method:Score.LowerLimit.m_LowerLimit(LowerLimit.java:27) 下限型打分方法被调用。
[INFO ] 2018-04-30 15:41:50,012 method:Score.LowerLimit.m_LowerLimitWithSquareBase(LowerLimit.java:69) 下限型打分方法被调用。
[INFO ] 2018-04-30 15:41:50,151 method:Score.LowerLimit.m_LowerLimitWithLinearBase(LowerLimit.java:43) 下限型打分方法被调用。
[INFO ] 2018-04-30 15:42:44,487 method:Score.LowerLimit.m_LowerLimit(LowerLimit.java:27) 默认高斯基函下限型打分方法被调用。
[INFO ] 2018-04-30 15:42:44,592 method:Score.LowerLimit.m_LowerLimitWithSquareBase(LowerLimit.java:69) 二次基函数下限型打分方法被调用。
[INFO ] 2018-04-30 15:42:44,734 method:Score.LowerLimit.m_LowerLimitWithLinearBase(LowerLimit.java:43) 线性基函数下限型打分方法被调用。
[INFO ] 2018-04-30 17:53:47,481 method:Classify.ClassifierDecisionTree.<init>(ClassifierDecisionTree.java:27) 创建一个决策树分类器对象
[INFO ] 2018-04-30 17:56:12,326 method:Classify.ClassifierDecisionTree.<init>(ClassifierDecisionTree.java:27) 创建一个决策树分类器对象
[INFO ] 2018-04-30 17:56:12,329 method:Classify.ClassifierDecisionTree.createClassifier(ClassifierDecisionTree.java:32) 创建决策树分类器模型
[INFO ] 2018-04-30 17:56:12,433 method:Classify.ClassifierDecisionTree.loadClassifier(ClassifierDecisionTree.java:55) 加载决策树分类器模型
[INFO ] 2018-04-30 17:56:12,476 method:Classify.ClassifierDecisionTree.insClassify(ClassifierDecisionTree.java:97) 使用决策树分类器模型进行分类
[INFO ] 2018-05-01 09:50:33,097 method:Classify.ClassifierDecisionTree.<init>(ClassifierDecisionTree.java:27) 创建一个决策树分类器对象
[INFO ] 2018-05-01 09:50:33,110 method:Classify.ClassifierDecisionTree.createClassifier(ClassifierDecisionTree.java:32) 创建决策树分类器模型
[INFO ] 2018-05-01 09:50:33,251 method:Classify.ClassifierDecisionTree.loadClassifier(ClassifierDecisionTree.java:55) 加载决策树分类器模型
[INFO ] 2018-05-01 09:50:33,294 method:Classify.ClassifierDecisionTree.insClassify(ClassifierDecisionTree.java:97) 使用决策树分类器模型进行分类
[INFO ] 2018-05-01 09:50:33,341 method:Classify.ClassifierKNN.<init>(ClassifierKNN.java:26) KNN分类器对象被创建
[INFO ] 2018-05-01 09:59:05,506 method:Classify.ClassifierDecisionTree.<init>(ClassifierDecisionTree.java:27) 创建一个决策树分类器对象
[INFO ] 2018-05-01 09:59:05,509 method:Classify.ClassifierDecisionTree.createClassifier(ClassifierDecisionTree.java:32) 创建决策树分类器模型
[INFO ] 2018-05-01 09:59:05,608 method:Classify.ClassifierDecisionTree.loadClassifier(ClassifierDecisionTree.java:55) 加载决策树分类器模型
[INFO ] 2018-05-01 09:59:05,652 method:Classify.ClassifierDecisionTree.insClassify(ClassifierDecisionTree.java:97) 使用决策树分类器模型进行分类
[INFO ] 2018-05-01 09:59:05,658 method:Classify.ClassifierKNN.<init>(ClassifierKNN.java:26) KNN分类器对象被创建
[INFO ] 2018-05-01 09:59:05,658 method:Classify.ClassifierKNN.createClassifier(ClassifierKNN.java:31) 创建KNN分类器模型
[INFO ] 2018-05-01 09:59:05,684 method:Classify.ClassifierKNN.loadClassifier(ClassifierKNN.java:58) 加载KNN分类器模型
[INFO ] 2018-05-01 09:59:05,697 method:Classify.ClassifierKNN.insClassify(ClassifierKNN.java:99) 使用KNN分类器模型进行分类
[INFO ] 2018-05-01 09:59:05,723 method:Classify.ClassifierLogistic.<init>(ClassifierLogistic.java:27) Logistic分类器对象被创建
[INFO ] 2018-05-01 09:59:05,723 method:Classify.ClassifierLogistic.createClassifier(ClassifierLogistic.java:32) 创建Logistic分类器模型
[INFO ] 2018-05-01 09:59:05,806 method:Classify.ClassifierLogistic.loadClassifier(ClassifierLogistic.java:56) 加载Logistic分类器模型
[INFO ] 2018-05-01 09:59:05,808 method:Classify.ClassifierLogistic.insClassify(ClassifierLogistic.java:98) 使用Logistic分类器模型进行分类
[INFO ] 2018-05-01 09:59:05,813 method:Classify.ClassifierNaiveBayes.<init>(ClassifierNaiveBayes.java:26) NaiveBayes分类器对象被创建
[INFO ] 2018-05-01 09:59:05,813 method:Classify.ClassifierNaiveBayes.createClassifier(ClassifierNaiveBayes.java:31) 创建NaiveBayes分类器模型
[INFO ] 2018-05-01 09:59:05,834 method:Classify.ClassifierNaiveBayes.loadClassifier(ClassifierNaiveBayes.java:56) 加载NaiveBayes分类器模型
[INFO ] 2018-05-01 09:59:05,835 method:Classify.ClassifierNaiveBayes.insClassify(ClassifierNaiveBayes.java:99) 使用NaiveBayes分类器模型
[INFO ] 2018-05-01 09:59:05,853 method:Classify.ClassifierSVM.<init>(ClassifierSVM.java:27) SVM对象被创建
[INFO ] 2018-05-01 09:59:05,854 method:Classify.ClassifierSVM.createClassifier(ClassifierSVM.java:32) 创建SVM分类器模型
[INFO ] 2018-05-01 09:59:05,919 method:Classify.ClassifierSVM.loadClassifier(ClassifierSVM.java:55) 加载SVM分类器模型
[INFO ] 2018-05-01 09:59:05,921 method:Classify.ClassifierSVM.insClassify(ClassifierSVM.java:96) 使用SVM分类器模型
[INFO ] 2018-05-01 10:04:03,553 method:Score.CountType.m_CountType(CountType.java:15) 计数型打分方法被调用！
[INFO ] 2018-05-01 10:04:24,575 method:Score.CountType.m_CountType(CountType.java:15) 计数型打分方法被调用！
[INFO ] 2018-05-01 10:05:07,902 method:Score.DescribeType.m_DescribeType(DescribeType.java:21) 描述型打分方法被调用
[INFO ] 2018-05-01 10:07:13,933 method:Score.CountType.m_CountType(CountType.java:15) 计数型打分方法被调用！
[INFO ] 2018-05-01 10:07:13,941 method:Score.DescribeType.m_DescribeType(DescribeType.java:21) 描述型打分方法被调用
[INFO ] 2018-05-01 10:07:13,942 method:Score.IntervalType.m_IntervalTypeWithLinarBase(IntervalType.java:43) 基于线性基函的区间型打分方法被调用
[INFO ] 2018-05-01 10:07:13,943 method:Score.IntervalType.m_IntervalTypeWithSquareBase(IntervalType.java:57) 基于二次基函的区间型打分方法被调用
[INFO ] 2018-05-01 10:07:13,944 method:Score.IntervalType.m_IntervalType(IntervalType.java:26) 默认区间型打分方法，基于高斯基函数被调用
[INFO ] 2018-05-01 10:07:13,945 method:Score.LowerLimit.m_LowerLimit(LowerLimit.java:26) 默认高斯基函下限型打分方法被调用。
[INFO ] 2018-05-01 10:07:13,956 method:Score.LowerLimit.m_LowerLimitWithSquareBase(LowerLimit.java:68) 二次基函数下限型打分方法被调用。
[INFO ] 2018-05-01 10:07:13,970 method:Score.LowerLimit.m_LowerLimitWithLinearBase(LowerLimit.java:42) 线性基函数下限型打分方法被调用。
[INFO ] 2018-05-01 10:07:13,971 method:Score.OneShot.m_OneShot(OneShot.java:13) 成败型打分方法被调用！
[INFO ] 2018-05-01 10:07:13,973 method:Score.UpperLimit.m_UpperLimitWithLinearBase(UpperLimit.java:45) 基于线性基函数上限型打分方法被调用
[INFO ] 2018-05-01 10:07:13,973 method:Score.UpperLimit.m_UpperLimit(UpperLimit.java:27) 默认方法基于高斯基函数上限型打分方法被调用
[INFO ] 2018-05-01 10:07:13,982 method:Score.UpperLimit.m_UpperLimitWithSquareBase(UpperLimit.java:71) 基于二次基函数上限型打分方法被调用
[INFO ] 2018-05-01 10:10:30,532 method:Weight.AHP.AHP.<init>(AHP.java:36) 创建一个AHP对象
[INFO ] 2018-05-01 10:10:30,535 method:Weight.AHP.AHP.m_AHP(AHP.java:272) 开始AHP的计算
[INFO ] 2018-05-01 10:10:30,540 method:Weight.EntropyWeight.m_EntropyWeight(EntropyWeight.java:23) 熵权法被调用
[INFO ] 2018-05-01 10:10:30,541 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:10:30,543 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:10:30,543 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:10:30,543 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:10:30,543 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:10:30,544 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:10:30,545 method:Weight.ExpertWeight.m_ExpertWeight(ExpertWeight.java:16) 专家赋权法被调用
[INFO ] 2018-05-01 10:10:30,547 method:Weight.PCA.PCA.<init>(PCA.java:26) 创建一个PCA对象
[INFO ] 2018-05-01 10:10:30,547 method:Weight.PCA.PCA.m_PCA(PCA.java:57) 开始PCA计算
[INFO ] 2018-05-01 10:10:30,548 method:Preprocessor.ZScore.m_ZScore(ZScore.java:33) ZScore标准化方法被调用
[INFO ] 2018-05-01 10:10:30,548 method:Preprocessor.ZScore.m_ZScore(ZScore.java:33) ZScore标准化方法被调用
[INFO ] 2018-05-01 10:10:30,548 method:Preprocessor.ZScore.m_ZScore(ZScore.java:33) ZScore标准化方法被调用
[INFO ] 2018-05-01 10:10:30,548 method:Preprocessor.ZScore.m_ZScore(ZScore.java:33) ZScore标准化方法被调用
[INFO ] 2018-05-01 10:10:30,550 method:Preprocessor.ZScore.m_ZScore(ZScore.java:33) ZScore标准化方法被调用
[INFO ] 2018-05-01 10:10:30,550 method:Preprocessor.ZScore.m_ZScore(ZScore.java:33) ZScore标准化方法被调用
[INFO ] 2018-05-01 10:10:30,550 method:Weight.PCA.PCA.computeRelationMatrix(PCA.java:37) PCA：计算关系矩阵
[INFO ] 2018-05-01 10:10:30,557 method:Weight.StandardDeviation.m_StandardDeviation(StandardDeviation.java:15) 标准离差法被调用
[INFO ] 2018-05-01 10:10:30,557 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:10:30,558 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:10:30,558 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:10:30,558 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:10:30,558 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:10:30,558 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:10:30,560 method:Weight.Topsis.m_Topsis(Topsis.java:20) Topsis方法被调用
[INFO ] 2018-05-01 10:10:30,561 method:Preprocessor.Gravity.m_Gravity(Gravity.java:32) 比重法标准化方法被调用
[INFO ] 2018-05-01 10:10:30,561 method:Preprocessor.Gravity.m_Gravity(Gravity.java:32) 比重法标准化方法被调用
[INFO ] 2018-05-01 10:10:30,562 method:Preprocessor.Gravity.m_Gravity(Gravity.java:32) 比重法标准化方法被调用
[INFO ] 2018-05-01 10:10:30,562 method:Preprocessor.Gravity.m_Gravity(Gravity.java:32) 比重法标准化方法被调用
[INFO ] 2018-05-01 10:10:30,562 method:Preprocessor.Gravity.m_Gravity(Gravity.java:32) 比重法标准化方法被调用
[INFO ] 2018-05-01 10:10:30,563 method:Preprocessor.Gravity.m_Gravity(Gravity.java:32) 比重法标准化方法被调用
[INFO ] 2018-05-01 10:10:30,564 method:Weight.WeightedAverage.m_WeightedAverage(WeightedAverage.java:16) 加权平均法求体系值被调用
[INFO ] 2018-05-01 10:11:30,900 method:Weight.AHP.AHP.<init>(AHP.java:36) 创建一个AHP对象
[INFO ] 2018-05-01 10:11:30,903 method:Weight.AHP.AHP.m_AHP(AHP.java:272) 开始AHP的计算
[INFO ] 2018-05-01 10:11:30,907 method:Weight.EntropyWeight.m_EntropyWeight(EntropyWeight.java:23) 熵权法被调用
[INFO ] 2018-05-01 10:11:30,908 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:11:30,909 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:11:30,910 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:11:30,910 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:11:30,910 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:11:30,911 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:11:30,912 method:Weight.ExpertWeight.m_ExpertWeight(ExpertWeight.java:16) 专家赋权法被调用
[INFO ] 2018-05-01 10:11:30,913 method:Weight.PCA.PCA.<init>(PCA.java:26) 创建一个PCA对象
[INFO ] 2018-05-01 10:11:30,914 method:Weight.PCA.PCA.m_PCA(PCA.java:57) 开始PCA计算
[INFO ] 2018-05-01 10:11:30,915 method:Preprocessor.ZScore.m_ZScore(ZScore.java:33) ZScore标准化方法被调用
[INFO ] 2018-05-01 10:11:30,915 method:Preprocessor.ZScore.m_ZScore(ZScore.java:33) ZScore标准化方法被调用
[INFO ] 2018-05-01 10:11:30,915 method:Preprocessor.ZScore.m_ZScore(ZScore.java:33) ZScore标准化方法被调用
[INFO ] 2018-05-01 10:11:30,915 method:Preprocessor.ZScore.m_ZScore(ZScore.java:33) ZScore标准化方法被调用
[INFO ] 2018-05-01 10:11:30,917 method:Preprocessor.ZScore.m_ZScore(ZScore.java:33) ZScore标准化方法被调用
[INFO ] 2018-05-01 10:11:30,917 method:Preprocessor.ZScore.m_ZScore(ZScore.java:33) ZScore标准化方法被调用
[INFO ] 2018-05-01 10:11:30,917 method:Weight.PCA.PCA.computeRelationMatrix(PCA.java:37) PCA：计算关系矩阵
[INFO ] 2018-05-01 10:11:30,923 method:Weight.StandardDeviation.m_StandardDeviation(StandardDeviation.java:15) 标准离差法被调用
[INFO ] 2018-05-01 10:11:30,923 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:11:30,923 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:11:30,924 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:11:30,924 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:11:30,924 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:11:30,924 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:11:30,926 method:Weight.Topsis.m_Topsis(Topsis.java:20) Topsis方法被调用
[INFO ] 2018-05-01 10:11:30,927 method:Preprocessor.Gravity.m_Gravity(Gravity.java:32) 比重法标准化方法被调用
[INFO ] 2018-05-01 10:11:30,928 method:Preprocessor.Gravity.m_Gravity(Gravity.java:32) 比重法标准化方法被调用
[INFO ] 2018-05-01 10:11:30,928 method:Preprocessor.Gravity.m_Gravity(Gravity.java:32) 比重法标准化方法被调用
[INFO ] 2018-05-01 10:11:30,928 method:Preprocessor.Gravity.m_Gravity(Gravity.java:32) 比重法标准化方法被调用
[INFO ] 2018-05-01 10:11:30,929 method:Preprocessor.Gravity.m_Gravity(Gravity.java:32) 比重法标准化方法被调用
[INFO ] 2018-05-01 10:11:30,929 method:Preprocessor.Gravity.m_Gravity(Gravity.java:32) 比重法标准化方法被调用
[INFO ] 2018-05-01 10:11:30,930 method:Weight.WeightedAverage.m_WeightedAverage(WeightedAverage.java:16) 加权平均法求体系值被调用
[INFO ] 2018-05-01 10:15:44,420 method:ProductQuality.VarianceSelection.m_VarianceSelection(VarianceSelection.java:39) 方差选择法被调用
[INFO ] 2018-05-01 10:15:44,424 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:15:44,424 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:15:44,425 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:15:44,425 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:15:44,425 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:18:40,214 method:ProductQuality.CorrelationCoefficient.m_CorrelationCoefficient(CorrelationCoefficient.java:17) 相关系数法被调用
[INFO ] 2018-05-01 10:18:40,220 method:ProductQuality.FTest.m_FTest(FTest.java:49) FTest 被调用
[INFO ] 2018-05-01 10:18:40,222 method:ProductQuality.InformationGain.m_InformationGain(InformationGain.java:17) 信息增益法被调用
[INFO ] 2018-05-01 10:18:40,223 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:18:40,224 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:18:40,224 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:18:40,224 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:18:40,224 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:18:40,226 method:ProductQuality.LogisticRegression.m_LogisticRegression(LogisticRegression.java:17) 逻辑回归系数法被调用
[ERROR] 2018-05-01 10:18:40,227 method:ProductQuality.LogisticRegression.m_LogisticRegression(LogisticRegression.java:19) 
[INFO ] 2018-05-01 10:18:40,227 method:ProductQuality.LogisticRegression.train(LogisticRegression.java:25) 逻辑回归训练权重向量
[INFO ] 2018-05-01 10:18:40,237 method:ProductQuality.OneWayANOVA.m_OneWayANOVA(OneWayANOVA.java:133) 单因素方差分析方法被调用
[INFO ] 2018-05-01 10:18:40,237 method:ProductQuality.SVMCoefficient.m_getCoefficient(SVMCoefficient.java:90) SVM系数法被调用
[INFO ] 2018-05-01 10:18:40,237 method:ProductQuality.SVMCoefficient.Train(SVMCoefficient.java:66) SVM训练权重向量
[INFO ] 2018-05-01 10:18:40,362 method:ProductQuality.TwoWayANOVA.m_TwoWayANOVA(TwoWayANOVA.java:143) 双因素方差方法被调用
[INFO ] 2018-05-01 10:18:40,366 method:ProductQuality.VarianceSelection.m_VarianceSelection(VarianceSelection.java:39) 方差选择法被调用
[INFO ] 2018-05-01 10:18:40,368 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:18:40,369 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:18:40,369 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:18:40,369 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:18:40,369 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:19:43,953 method:ProductQuality.CorrelationCoefficient.m_CorrelationCoefficient(CorrelationCoefficient.java:17) 相关系数法被调用
[INFO ] 2018-05-01 10:19:43,959 method:ProductQuality.FTest.m_FTest(FTest.java:49) FTest 被调用
[INFO ] 2018-05-01 10:19:43,960 method:ProductQuality.InformationGain.m_InformationGain(InformationGain.java:17) 信息增益法被调用
[INFO ] 2018-05-01 10:19:43,961 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:19:43,962 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:19:43,962 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:19:43,962 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:19:43,963 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:19:43,965 method:ProductQuality.LogisticRegression.m_LogisticRegression(LogisticRegression.java:17) 逻辑回归系数法被调用
[ERROR] 2018-05-01 10:19:43,967 method:ProductQuality.LogisticRegression.m_LogisticRegression(LogisticRegression.java:19) 
[INFO ] 2018-05-01 10:19:43,968 method:ProductQuality.LogisticRegression.train(LogisticRegression.java:25) 逻辑回归训练权重向量
[INFO ] 2018-05-01 10:19:43,976 method:ProductQuality.OneWayANOVA.m_OneWayANOVA(OneWayANOVA.java:133) 单因素方差分析方法被调用
[INFO ] 2018-05-01 10:19:43,977 method:ProductQuality.SVMCoefficient.m_getCoefficient(SVMCoefficient.java:90) SVM系数法被调用
[INFO ] 2018-05-01 10:19:43,977 method:ProductQuality.SVMCoefficient.Train(SVMCoefficient.java:66) SVM训练权重向量
[INFO ] 2018-05-01 10:19:43,987 method:ProductQuality.TwoWayANOVA.m_TwoWayANOVA(TwoWayANOVA.java:143) 双因素方差方法被调用
[INFO ] 2018-05-01 10:19:43,989 method:ProductQuality.VarianceSelection.m_VarianceSelection(VarianceSelection.java:39) 方差选择法被调用
[INFO ] 2018-05-01 10:19:43,990 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:19:43,990 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:19:43,990 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:19:43,991 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
[INFO ] 2018-05-01 10:19:43,991 method:Preprocessor.MinMax.m_MinMax(MinMax.java:47) MIN_MAX标准化方法被调用
