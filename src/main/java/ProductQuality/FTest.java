package ProductQuality;

import Preprocessor.Statistics;
import org.apache.log4j.Logger;

/**
 * Created by supc on 2018/2/20 0020.
 * 假设两批样本存在显著采用
 * 如果返回true表明存在显著差异
 * 如果返回false表明不存在显著差异
 */
public class FTest {
    private static final Logger log = Logger.getLogger(FTest.class);

    public static final double[][] criticalTable = {
            {161.448, 199.5, 215.707, 224.583, 230.162, 233.986, 236.768, 238.883, 240.543, 241.882},
            {18.513, 19, 19.164, 19.247, 19.296, 19.33, 19.353, 19.371, 19.385, 19.396},
            {10.128, 9.552, 9.277, 9.117, 9.013, 8.941, 8.887, 8.845, 8.812, 8.786},
            {7.709, 6.944, 6.591, 6.388, 6.256, 6.163, 6.094, 6.041, 5.999, 5.964},
            {6.608, 5.786, 5.409, 5.192, 5.05, 4.95, 4.876, 4.818, 4.772, 4.735},
            {5.987, 5.143, 4.757, 4.534, 4.387, 4.284, 4.207, 4.147, 4.099, 4.06},
            {5.591, 4.737, 4.347, 4.12, 3.972, 3.866, 3.787, 3.726, 3.677, 3.637},
            {5.318, 4.459, 4.066, 3.838, 3.687, 3.581, 3.5, 3.438, 3.388, 3.347},
            {5.117, 4.256, 3.863, 3.633, 3.482, 3.374, 3.293, 3.23, 3.179, 3.137},
            {4.965, 4.103, 3.708, 3.478, 3.326, 3.217, 3.135, 3.072, 3.02, 2.978},
            {4.844, 3.982, 3.587, 3.357, 3.204, 3.095, 3.012, 2.948, 2.896, 2.854},
            {4.747, 3.885, 3.49, 3.259, 3.106, 2.996, 2.913, 2.849, 2.796, 2.753},
            {4.667, 3.806, 3.411, 3.179, 3.025, 2.915, 2.832, 2.767, 2.714, 2.671},
            {4.6, 3.739, 3.344, 3.112, 2.958, 2.848, 2.764, 2.699, 2.646, 2.602},
            {4.543, 3.682, 3.287, 3.056, 2.901, 2.79, 2.707, 2.641, 2.588, 2.544},
            {4.494, 3.634, 3.239, 3.007, 2.852, 2.741, 2.657, 2.591, 2.538, 2.494},
            {4.451, 3.592, 3.197, 2.965, 2.81, 2.699, 2.614, 2.548, 2.494, 2.45},
            {4.414, 3.555, 3.16, 2.928, 2.773, 2.661, 2.577, 2.51, 2.456, 2.412},
            {4.381, 3.522, 3.127, 2.895, 2.74, 2.628, 2.544, 2.477, 2.423, 2.378},
            {4.351, 3.493, 3.098, 2.866, 2.711, 2.599, 2.514, 2.447, 2.393, 2.348},
            {4.325, 3.467, 3.072, 2.84, 2.685, 2.573, 2.488, 2.42, 2.366, 2.321},
            {4.301, 3.443, 3.049, 2.817, 2.661, 2.549, 2.464, 2.397, 2.342, 2.297},
            {4.279, 3.422, 3.028, 2.796, 2.64, 2.528, 2.442, 2.375, 2.32, 2.275},
            {4.26, 3.403, 3.009, 2.776, 2.621, 2.508, 2.423, 2.355, 2.3, 2.255},
            {4.242, 3.385, 2.991, 2.759, 2.603, 2.49, 2.405, 2.337, 2.282, 2.236},
            {4.225, 3.369, 2.975, 2.743, 2.587, 2.474, 2.388, 2.321, 2.265, 2.22},
            {4.21, 3.354, 2.96, 2.728, 2.572, 2.459, 2.373, 2.305, 2.25, 2.204},
            {4.196, 3.34, 2.947, 2.714, 2.558, 2.445, 2.359, 2.291, 2.236, 2.19},
            {4.183, 3.328, 2.934, 2.701, 2.545, 2.432, 2.346, 2.278, 2.223, 2.177},
            {4.171, 3.316, 2.922, 2.69, 2.534, 2.421, 2.334, 2.266, 2.211, 2.165}
    };

    public static boolean m_FTest(double[] sampleOne, double[] sampleTwo) {
        log.info("FTest 被调用");

        double s1 = Statistics.getSampleVariance(sampleOne);
        double s2 = Statistics.getSampleVariance(sampleTwo);
        double max = s1 >= s2 ? s1 : s2;
        double min = s1 <= s2 ? s1 : s2;
        double f = max / min;
        int nRow, nColumn;
        if (s1 >= s2) {
            nColumn = sampleOne.length - 2;
            nRow = sampleTwo.length - 2;
        } else {
            nColumn = sampleTwo.length - 2;
            nRow = sampleOne.length - 2;
        }
        double fTable = 1000.0;
        try {
            fTable = criticalTable[nRow][nColumn];
        } catch (Exception e) {
            log.error("检验样本大小超出了使用范围");
            throw new Exception("检验样本大小超出了使用范围");
        } finally {
            if (f > fTable) {
                return true;
            } else {
                return false;
            }
        }
    }
}
